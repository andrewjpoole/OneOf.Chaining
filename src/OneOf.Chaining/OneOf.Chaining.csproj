<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
	<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
	<PackageLicenseExpression>MIT</PackageLicenseExpression>
	<Authors>Andrew Poole, Alex Steele</Authors>
	<Description>Extension methods which enable chainging of methods together, including async, any method can be chained as long as it returns a Task of OneOf of T or TFailure. Depends on the OneOf library (MIT).</Description>
	<Copyright>2023 andrew poole</Copyright>
	<RepositoryUrl>https://github.com/andrewjpoole/OneOf.Chaining</RepositoryUrl>
	<PackageTags>Async method chaining, Clear Orchestration, OneOf</PackageTags>
	<PackageReleaseNotes>
		1.1.0) Added parallel ThenWaitForAll and ThenWaitForFirst methods
		1.0.0) initial version
	</PackageReleaseNotes>
	<Version>1.1.0</Version>
	<RepositoryType>github</RepositoryType>
	<PackageLicenseExpression>MIT</PackageLicenseExpression>
	<IncludeSymbols>true</IncludeSymbols>
	<EmbedAllSources>true</EmbedAllSources>
	<GenerateDocumentationFile>True</GenerateDocumentationFile>
	<PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

	<ItemGroup>
		<None Include="..\..\README.md">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
    <PackageReference Include="OneOf" Version="3.0.263" />
  </ItemGroup>

</Project>
